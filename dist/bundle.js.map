{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://cards-game/./src/main.js"],"sourcesContent":["import './styles.css'\n\nlet radios = Array.from(document.getElementsByName('radios'))\nlet startScreen = document.querySelector('.content-box')\nlet easyGame = document.querySelector('.easy-game')\nlet mediumGame = document.querySelector('.medium-game')\nlet hardGame = document.querySelector('.hard-game')\nlet stopwatchBox = document.querySelector('.stopwatch')\nlet minutesBox = document.querySelector('.minutes')\nlet secondsBox = document.querySelector('.seconds')\nlet formElement = document.querySelector('.form')\nlet level = 'Easy'\nlet minutes = 0\nlet seconds = 0\nlet cardToCompare = 0\nlet busy\n\nfunction createCards() {\n    let allCards = []\n    for (let i = 1; i < 37; i++) {\n        allCards.push(\n            `<div class=\"card card${i}\" data-index=\"${i}\">\n      <div class=\"card-back card-face\"></div>\n      <div class=\"card-front card-face\"></div>\n    </div>`\n        )\n    }\n    return allCards\n}\n\nfunction canFlipCard(card) {\n    return !busy && cardToCompare !== card\n}\n\nfunction checkForCardMatch(card) {\n    if (card.dataset.index === cardToCompare.dataset.index) {\n        setTimeout(() => {\n            alert('Вы выиграли!')\n        }, 1000)\n    } else {\n        setTimeout(() => {\n            alert('Вы проиграли :(')\n        }, 1000)\n    }\n\n    cardToCompare = null\n}\n\nfunction flipCards() {\n    let cards = Array.from(document.getElementsByClassName('card'))\n    cards.forEach((card) => {\n        card.addEventListener('click', () => {\n            if (canFlipCard(card)) {\n                card.classList.add('visible')\n                if (cardToCompare) {\n                    checkForCardMatch(card)\n                } else {\n                    cardToCompare = card\n                }\n            }\n        })\n    })\n}\n\nfunction shuffleCardsAndShow() {\n    let cards = Array.from(document.getElementsByClassName('card'))\n\n    for (let i = cards.length - 1; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (i + 1))\n        cards[randIndex].style.order = i\n        cards[i].style.order = randIndex\n    }\n\n    setTimeout(() => {\n        cards.forEach((card) => {\n            card.classList.add('visible')\n        })\n    }, 1000)\n\n    setTimeout(() => {\n        cards.forEach((card) => {\n            card.classList.remove('visible')\n        })\n        busy = false\n    }, 5000)\n}\n\n// function compareCards() {\n//     let cards = Array.from(document.getElementsByClassName('card'));\n//     cards.add\n// }\n\nfunction showEasyScreen(cardsArray) {\n    let easyCards = []\n    let IndexToCompare = '0'\n    for (let i = 3; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (35 + 1))\n        if (+randIndex !== +IndexToCompare) {\n            easyCards.push(cardsArray[randIndex])\n            easyCards.push(cardsArray[randIndex])\n            IndexToCompare = randIndex\n        } else {\n            i++\n        }\n    }\n\n    console.log(easyCards)\n\n    let easyCardsHTML = ''\n    easyCards.forEach((card) => {\n        easyCardsHTML += card\n    })\n\n    easyGame.innerHTML = easyCardsHTML\n    shuffleCardsAndShow()\n    flipCards()\n}\n\nfunction showMediumScreen(cardsArray) {\n    let mediumCards = []\n    let IndexToCompare = 'd'\n    for (let i = 6; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (35 + 1))\n        if (+randIndex !== +IndexToCompare) {\n            mediumCards.push(cardsArray[randIndex])\n            mediumCards.push(cardsArray[randIndex])\n            IndexToCompare = randIndex\n        } else {\n            i++\n        }\n    }\n\n    let mediumCardsHTML = ''\n    mediumCards.forEach((card) => {\n        mediumCardsHTML += card\n    })\n\n    mediumGame.innerHTML = mediumCardsHTML\n    shuffleCardsAndShow()\n    flipCards()\n}\n\nfunction showHardScreen(cardsArray) {\n    let hardCards = []\n    let IndexToCompare = '0'\n    for (let i = 9; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (35 + 1))\n        if (+randIndex !== +IndexToCompare) {\n            hardCards.push(cardsArray[randIndex])\n            hardCards.push(cardsArray[randIndex])\n            IndexToCompare = randIndex\n        } else {\n            i++\n        }\n    }\n\n    let hardCardsHTML = ''\n    hardCards.forEach((card) => {\n        hardCardsHTML += card\n    })\n\n    hardGame.innerHTML = hardCardsHTML\n    shuffleCardsAndShow()\n    flipCards()\n}\n\nfunction chooseLevel() {\n    event.preventDefault()\n    startScreen.classList.remove('visible')\n    stopwatchBox.classList.add('visible')\n    let cardsArray = createCards()\n\n    radios.forEach((radio) => {\n        if (radio.checked) {\n            level = radio.value\n        }\n    })\n\n    if (level === 'Easy') {\n        easyGame.classList.add('visible-cards')\n        showEasyScreen(cardsArray)\n    } else if (level === 'Medium') {\n        mediumGame.classList.add('visible-cards')\n        showMediumScreen(cardsArray)\n    } else if (level === 'Hard') {\n        hardGame.classList.add('visible-cards')\n        showHardScreen(cardsArray)\n    }\n\n    const startStopwatch = () => {\n        seconds++\n        secondsBox.innerHTML = '0' + seconds\n\n        if (seconds > 9) {\n            secondsBox.innerHTML = seconds\n        }\n\n        if (seconds > 59) {\n            minutes++\n            minutesBox.innerHTML = '0' + minutes\n            seconds = 0\n        }\n\n        if (minutes > 9) {\n            minutesBox.innerHTML = minutes\n        }\n    }\n\n    if (stopwatchBox) {\n        setInterval(startStopwatch, 1000)\n    }\n}\n\nfunction beginGame() {\n    minutes = 0\n    seconds = 0\n    busy = true\n    cardToCompare = null\n\n    startScreen.classList.add('visible')\n    easyGame.classList.remove('visible-cards')\n    hardGame.classList.remove('visible-cards')\n    mediumGame.classList.remove('visible-cards')\n    stopwatchBox.classList.remove('visible')\n\n    formElement.addEventListener('submit', chooseLevel)\n}\n\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', beginGame())\n} else {\n    beginGame()\n}\n"],"names":["busy","radios","Array","from","document","getElementsByName","startScreen","querySelector","easyGame","mediumGame","hardGame","stopwatchBox","minutesBox","secondsBox","formElement","level","minutes","seconds","cardToCompare","flipCards","getElementsByClassName","forEach","card","addEventListener","canFlipCard","classList","add","dataset","index","setTimeout","alert","checkForCardMatch","shuffleCardsAndShow","cards","i","length","randIndex","Math","floor","random","style","order","remove","chooseLevel","event","preventDefault","cardsArray","allCards","push","createCards","radio","checked","value","easyCards","IndexToCompare","console","log","easyCardsHTML","innerHTML","showEasyScreen","mediumCards","mediumCardsHTML","showMediumScreen","hardCards","hardCardsHTML","showHardScreen","setInterval","beginGame","readyState"],"sourceRoot":""}