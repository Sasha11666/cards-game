{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://cards-game/./src/styles.css?1553","webpack://cards-game/webpack/bootstrap","webpack://cards-game/webpack/runtime/make namespace object","webpack://cards-game/./src/main.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './styles.css'\n\nlet radios = Array.from(document.querySelectorAll<HTMLInputElement>('.radios'))\nlet startScreen = document.querySelector('.content-box')\nlet victoryScreen = document.querySelector('.victory-lose-screen')\nlet spentMinutes = document.querySelector('.time-spent-minutes')\nlet spentSeconds = document.querySelector('.time-spent-seconds')\nlet victoryButton = document.getElementById('victory-restart-button')\nlet victoryLoseText = document.querySelector('.victory-lose-text')\nlet victoryLoseIcon = document.querySelector('.victory-lose-icon')\nlet easyGame = document.querySelector('.easy-game')\nlet mediumGame = document.querySelector('.medium-game')\nlet hardGame = document.querySelector('.hard-game')\nlet restartButton = document.querySelector('.restart-button')\nlet stopwatchBox = document.querySelector('.stopwatch')\nlet minutesBox = document.querySelector('.minutes')\nlet secondsBox = document.querySelector('.seconds')\nlet formElement = document.querySelector('.form')\nlet level: string = 'Easy'\nlet minutes: number = 0\nlet seconds: number = 0\nlet cardToCompare: HTMLElement | null = null\nlet busy: boolean\nlet result: string = ''\nlet interval: number\n\nfunction createCards() {\n    let allCards: string[] = []\n    for (let i = 1; i < 37; i++) {\n        allCards.push(\n            `<div class=\"card card${i}\" data-index=\"${i}\">\n      <div class=\"card-back card-face\"></div>\n      <div class=\"card-front card-face\"></div>\n    </div>`\n        )\n    }\n    return allCards\n}\n\nfunction canFlipCard(card: Element) {\n    return !busy && cardToCompare !== card\n}\n\nfunction showVictoryLoseScreen() {\n    victoryScreen?.classList.add('visible')\n    stopwatchBox?.classList.remove('visible')\n    easyGame?.classList.remove('visible-cards')\n    mediumGame?.classList.remove('visible-cards')\n    hardGame?.classList.remove('visible-cards')\n    if (spentMinutes && minutesBox)\n        spentMinutes.innerHTML = minutesBox.innerHTML\n    if (spentSeconds && secondsBox)\n        spentSeconds.innerHTML = secondsBox.innerHTML\n    if (victoryButton) victoryButton.addEventListener('click', beginGame)\n    if (result === 'victory') {\n        if (victoryLoseText) victoryLoseText.innerHTML = 'Вы выиграли!'\n        victoryLoseIcon?.classList.remove('dead')\n        victoryLoseIcon?.classList.add('celebration')\n    } else {\n        if (victoryLoseText) victoryLoseText.innerHTML = 'Вы проиграли!'\n        victoryLoseIcon?.classList.remove('celebration')\n        victoryLoseIcon?.classList.add('dead')\n    }\n}\n\nfunction checkForCardMatch(card: HTMLElement) {\n    setTimeout((): void => {\n        if (card.dataset.index === cardToCompare?.dataset.index) {\n            result = 'victory'\n            showVictoryLoseScreen()\n        } else {\n            result = 'lose'\n            showVictoryLoseScreen()\n        }\n\n        cardToCompare = null\n    }, 1000)\n}\n\nfunction flipCards() {\n    let cards: HTMLElement[] = Array.from(document.querySelectorAll('.card'))\n    cards.forEach((card) => {\n        card.addEventListener('click', () => {\n            if (canFlipCard(card)) {\n                card.classList.add('visible')\n                if (cardToCompare) {\n                    checkForCardMatch(card)\n                } else {\n                    cardToCompare = card\n                }\n            }\n        })\n    })\n}\n\nfunction shuffleCardsAndShow() {\n    let cards: HTMLElement[] = Array.from(document.querySelectorAll('.card'))\n\n    for (let i = cards.length - 1; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (i + 1))\n        cards[randIndex].style.order = String(i)\n        cards[i].style.order = String(randIndex)\n    }\n\n    setTimeout(() => {\n        cards.forEach((card) => {\n            card.classList.add('visible')\n        })\n    }, 1000)\n\n    setTimeout(() => {\n        cards.forEach((card) => {\n            card.classList.remove('visible')\n        })\n        busy = false\n    }, 5000)\n}\n\nfunction showEasyScreen(cardsArray: string[]) {\n    let easyCards = []\n    let IndexToCompare = '0'\n    for (let i = 3; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (35 + 1))\n        if (+randIndex !== +IndexToCompare) {\n            easyCards.push(cardsArray[randIndex])\n            easyCards.push(cardsArray[randIndex])\n            IndexToCompare = String(randIndex)\n        } else {\n            i++\n        }\n    }\n\n    console.log(easyCards)\n\n    let easyCardsHTML = ''\n    easyCards.forEach((card) => {\n        easyCardsHTML += card\n    })\n\n    if (easyGame) easyGame.innerHTML = easyCardsHTML\n    shuffleCardsAndShow()\n    flipCards()\n}\n\nfunction showMediumScreen(cardsArray: string[]) {\n    let mediumCards = []\n    let IndexToCompare = 'd'\n    for (let i = 6; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (35 + 1))\n        if (+randIndex !== +IndexToCompare) {\n            mediumCards.push(cardsArray[randIndex])\n            mediumCards.push(cardsArray[randIndex])\n            IndexToCompare = String(randIndex)\n        } else {\n            i++\n        }\n    }\n\n    let mediumCardsHTML = ''\n    mediumCards.forEach((card) => {\n        mediumCardsHTML += card\n    })\n\n    if (mediumGame) mediumGame.innerHTML = mediumCardsHTML\n    shuffleCardsAndShow()\n    flipCards()\n}\n\nfunction showHardScreen(cardsArray: string[]) {\n    let hardCards = []\n    let IndexToCompare = '0'\n    for (let i = 9; i > 0; i--) {\n        let randIndex = Math.floor(Math.random() * (35 + 1))\n        if (+randIndex !== +IndexToCompare) {\n            hardCards.push(cardsArray[randIndex])\n            hardCards.push(cardsArray[randIndex])\n            IndexToCompare = String(randIndex)\n        } else {\n            i++\n        }\n    }\n\n    let hardCardsHTML = ''\n    hardCards.forEach((card) => {\n        hardCardsHTML += card\n    })\n\n    if (hardGame) hardGame.innerHTML = hardCardsHTML\n    shuffleCardsAndShow()\n    flipCards()\n}\n\nfunction chooseLevel() {\n    if (event) event.preventDefault()\n    startScreen?.classList.remove('visible')\n    stopwatchBox?.classList.add('visible')\n    restartButton?.addEventListener('click', beginGame)\n    let cardsArray = createCards()\n\n    radios.forEach((radio) => {\n        if (radio.checked) {\n            level = radio.value\n        }\n    })\n\n    if (level === 'Easy') {\n        easyGame?.classList.add('visible-cards')\n        showEasyScreen(cardsArray)\n    } else if (level === 'Medium') {\n        mediumGame?.classList.add('visible-cards')\n        showMediumScreen(cardsArray)\n    } else if (level === 'Hard') {\n        hardGame?.classList.add('visible-cards')\n        showHardScreen(cardsArray)\n    }\n\n    const startStopwatch = (): void => {\n        seconds++\n        if (secondsBox && minutesBox) {\n            secondsBox.innerHTML = '0' + seconds\n\n            if (seconds > 9) {\n                secondsBox.innerHTML = String(seconds)\n            }\n\n            if (seconds > 59) {\n                minutes++\n                minutesBox.innerHTML = '0' + minutes\n                seconds = 0\n            }\n\n            if (minutes > 9) {\n                minutesBox.innerHTML = String(minutes)\n            }\n        }\n    }\n\n    if (stopwatchBox) {\n        setTimeout(() => {\n            interval = Number(setInterval(startStopwatch, 1000))\n        }, 5000)\n    }\n}\n\nfunction beginGame() {\n    minutes = 0\n    seconds = 0\n    busy = true\n    cardToCompare = null\n    if (secondsBox) secondsBox.innerHTML = '00'\n    if (minutesBox) minutesBox.innerHTML = '00'\n    clearInterval(interval)\n\n    startScreen?.classList.add('visible')\n    easyGame?.classList.remove('visible-cards')\n    hardGame?.classList.remove('visible-cards')\n    mediumGame?.classList.remove('visible-cards')\n    stopwatchBox?.classList.remove('visible')\n    victoryScreen?.classList.remove('visible')\n\n    if (formElement) formElement.addEventListener('submit', chooseLevel)\n}\n\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', beginGame)\n} else {\n    beginGame()\n}\n"],"names":[],"sourceRoot":""}